import asyncio
import logging
import sys
import os
import dotenv

from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.markdown import hbold, hitalic

from keyboards.reply import greeting_keyboard, price_keyboard, oplata_keyboard_1_month, oplata_keyboard_2_month, \
    oplata_keyboard_3_month
from data.config import price_list, dostup_text, pic
from handlers import callbacks
from utils.statesform import GetWalletForm


dotenv.load_dotenv(dotenv.find_dotenv())

bot = Bot(os.getenv('TG_TOKEN'))
dp = Dispatcher()


# –ù–∞—á–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞
@dp.message(CommandStart())
async def get_start(message: Message, bot: Bot):
    await message.answer(hbold("–ü—Ä–∏–≤–µ—Ç,", message.from_user.username) + "!\n\n"
                         f"–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ –º–æ—é –ø—Ä–∏–≤–∞—Ç–∫—É.\n\n"
                         f"{hitalic('–î–ª—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏ /help')}\n\n"
                         f"{hbold(f'–ê–î–ú–ò–ù: @tyoma5e')}",
                         parse_mode=ParseMode.HTML,
                         reply_markup=greeting_keyboard)


# –ö–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
@dp.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø üìà")
async def dostup(message: Message, bot: Bot):
    await message.answer(hbold("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–µ—Ä–∏–æ–¥:"),
                         parse_mode=ParseMode.HTML,
                         reply_markup=price_keyboard)


# –ö–Ω–æ–ø–∫–∞ 1 –º–µ—Å—è—Ü
@dp.message(F.text == "–î–æ—Å—Ç—É–ø –Ω–∞ 1 –º–µ—Å—è—Ü üë∂")
async def one_month(message: Message, bot: Bot):
    text = dostup_text.substitute(price=price_list[0])
    await bot.send_photo(message.from_user.id,
                         photo=pic,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=oplata_keyboard_1_month
                         )


# –ö–Ω–æ–ø–∫–∞ 1 –º–µ—Å—è—Ü
@dp.message(F.text == "–î–æ—Å—Ç—É–ø –Ω–∞ 2 –º–µ—Å—è—Ü–∞ ü§©")
async def two_months(message: Message, bot: Bot):
    text = dostup_text.substitute(price=price_list[1])
    await bot.send_photo(message.from_user.id,
                         photo=pic,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=oplata_keyboard_2_month
                         )


# –ö–Ω–æ–ø–∫–∞ 1 –º–µ—Å—è—Ü
@dp.message(F.text == "–î–æ—Å—Ç—É–ø –Ω–∞ 3 –º–µ—Å—è—Ü–∞ üëë")
async def three_months(message: Message, bot: Bot):
    text = dostup_text.substitute(price=price_list[2])
    await bot.send_photo(message.from_user.id,
                         photo=pic,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=oplata_keyboard_3_month
                         )


# –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
@dp.message(F.text == "–ù–∞–∑–∞–¥")
async def get_start(message: Message, bot: Bot):
    await message.answer(hbold('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é‚Ü©Ô∏è'),
                         parse_mode=ParseMode.HTML,
                         reply_markup=greeting_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–±–µ–∫–∞ –æ–ø–ª–∞—Ç—ã 1 –º–µ—Å—è—Ü–∞
dp.callback_query.register(callbacks.predup_form, F.data.startswith("oplata"))
dp.message.register(callbacks.get_wallet, GetWalletForm.GET_WALLET)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def start():
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∞–π–ª
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(start())